import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.util.Map;
import java.util.Scanner;

/**
 * This class accomplishes Mission Firewall
 */
public class MalwareScanner {

    private final Map<String, Malware> malwareDB;


    public MalwareScanner(Map<String, Malware> malwareDB) {
        this.malwareDB = malwareDB;
    }

    /**
     * TODO: Open and read the input file while searching for threats
     * TODO: Write results to both; a new file name "scanLog.txt" and to the console
     *
     * @param filename the input file
     * @throws IOException the io exception
     */
    public void scanFile(String filename) throws IOException {
        // TODO: YOUR CODE HERE
        File file = new File(filename);
        Scanner scan = new Scanner(file);
        String line = "";
        FileWriter writer= new FileWriter("scanLog.txt");
        int counter =0;
        int counter2 = 0;
        System.out.println("Started scanning...");
        System.out.println("--------------------------------------------------------------------------------");
        while (scan.hasNextLine()){
             counter++;
             line = scan.nextLine();
             String result = turbo64(line);
             for(String key : malwareDB.keySet()){
                 if (key.equals(result)){
                     counter2++;
                     writer.write(result+"@"+counter+"\n");
                     System.out.println("Detected malware!");
                     System.out.println("Name: "+malwareDB.get(key).getTitle());
                     System.out.println("Threat Level: "+ malwareDB.get(key).getLevel());
                     System.out.println("Hash:"+result);
                     System.out.println("--------------------------------------------------------------------------------");
                     break;
                 }
             }
        }
        System.out.println("Scan complete! "+counter2+" threats are found and eliminated. Generating log file...");

        writer.close();
        scan.close();
    }

    public static String turbo64(String in) {
        long MOD_TURBO = 4294967291L;
        long a = 0;
        long b = 1;
        for (int c = 0;c<in.length();c++){
            a = (a+(int) in.charAt(c)) % MOD_TURBO;
            b = (a+b) % MOD_TURBO;
        }
        return Long.toHexString(b<<32|a);


        // Implement turbo64 algorithm given by the assignment instructions
        // TODO: YOUR CODE HERE
    }
}
